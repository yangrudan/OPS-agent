2025-09-04T11:36:37.883412Z  INFO spawn_dataflow{build_id=Some(BuildId(01991483-7a24-7135-869a-97eae04cc847)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }, DataId("mem_result"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("query"), DataId("scheduler_result"), DataId("weather_request")} }, Node { id: NodeId("ops-mem-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991483-acf9-73fc-8eba-b4a7f25f446c`
2025-09-04T11:36:37.887857Z  INFO dora_coordinator: successfully spawned dataflow `01991483-acf9-73fc-8eba-b4a7f25f446c`
2025-09-04T11:38:08.560335Z  INFO dora_coordinator: successfully send stop dataflow `01991483-acf9-73fc-8eba-b4a7f25f446c` to all daemons
2025-09-04T11:38:14.759459Z  WARN dora_coordinator: Coordinator took 101ms for handling event: Log
2025-09-04T11:38:24.310539Z  INFO dora_coordinator: removed machine id: db0aba85-b38d-48ed-97d3-54e5f509bce4 from dataflow: 01991483-acf9-73fc-8eba-b4a7f25f446c
2025-09-04T11:38:47.544546Z  INFO spawn_dataflow{build_id=Some(BuildId(01991483-7a24-7135-869a-97eae04cc847)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }, DataId("mem_result"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("query"), DataId("scheduler_result"), DataId("weather_request")} }, Node { id: NodeId("ops-mem-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991485-a777-78bc-b4a2-c3a03625974f`
2025-09-04T11:38:47.548513Z  INFO dora_coordinator: successfully spawned dataflow `01991485-a777-78bc-b4a2-c3a03625974f`
2025-09-04T11:40:47.899685Z  INFO dora_coordinator: successfully send stop dataflow `01991485-a777-78bc-b4a2-c3a03625974f` to all daemons
2025-09-04T11:41:02.913478Z  INFO dora_coordinator: removed machine id: db0aba85-b38d-48ed-97d3-54e5f509bce4 from dataflow: 01991485-a777-78bc-b4a2-c3a03625974f
2025-09-04T11:41:02.913560Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T11:41:09.838281Z  INFO spawn_dataflow{build_id=Some(BuildId(01991483-7a24-7135-869a-97eae04cc847)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }, DataId("mem_result"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("query"), DataId("scheduler_result"), DataId("weather_request")} }, Node { id: NodeId("ops-mem-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991487-d34c-7d14-82b5-94aa08db2070`
2025-09-04T11:41:09.842229Z  INFO dora_coordinator: successfully spawned dataflow `01991487-d34c-7d14-82b5-94aa08db2070`
2025-09-04T11:42:15.301375Z  INFO dora_coordinator: successfully send stop dataflow `01991487-d34c-7d14-82b5-94aa08db2070` to all daemons
2025-09-04T11:42:30.362642Z  INFO dora_coordinator: removed machine id: db0aba85-b38d-48ed-97d3-54e5f509bce4 from dataflow: 01991487-d34c-7d14-82b5-94aa08db2070
2025-09-04T11:42:30.362754Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T11:42:32.085407Z  INFO spawn_dataflow{build_id=Some(BuildId(01991483-7a24-7135-869a-97eae04cc847)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }, DataId("mem_result"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("query"), DataId("scheduler_result"), DataId("weather_request")} }, Node { id: NodeId("ops-mem-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991489-1493-72cd-ae10-edbe9f396954`
2025-09-04T11:42:32.088981Z  INFO dora_coordinator: successfully spawned dataflow `01991489-1493-72cd-ae10-edbe9f396954`
2025-09-04T11:42:52.672825Z  INFO dora_coordinator: successfully send stop dataflow `01991489-1493-72cd-ae10-edbe9f396954` to all daemons
2025-09-04T11:43:08.267019Z  INFO spawn_dataflow{build_id=Some(BuildId(01991483-7a24-7135-869a-97eae04cc847)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }, DataId("mem_result"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem-agent"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("query"), DataId("scheduler_result"), DataId("weather_request")} }, Node { id: NodeId("ops-mem-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991489-a1e9-7ca2-820a-c3bd18e6bfb8`
2025-09-04T11:43:08.275047Z  INFO dora_coordinator: successfully spawned dataflow `01991489-a1e9-7ca2-820a-c3bd18e6bfb8`
2025-09-04T11:43:41.043702Z  INFO dora_coordinator: successfully send stop dataflow `01991489-a1e9-7ca2-820a-c3bd18e6bfb8` to all daemons
2025-09-04T11:43:56.081576Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 01991489-a1e9-7ca2-820a-c3bd18e6bfb8
2025-09-04T11:43:56.081707Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T11:52:23.893230Z  INFO spawn_dataflow{build_id=None session_id=SessionId(01991491-d4b7-78ba-8af5-573926acc0c4) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/test_llm") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991492-1c54-7bd5-8195-568d2e6bd34d`
2025-09-04T11:52:23.894200Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 01991492-1c54-7bd5-8195-568d2e6bd34d
2025-09-04T11:52:23.894231Z ERROR dora_coordinator: pending spawn result on dataflow finish    
2025-09-04T11:52:23.894251Z  WARN dora_coordinator: received DataflowSpawnResult, but no matching dataflow in `running_dataflows` map
2025-09-04T11:57:55.952083Z  INFO spawn_dataflow{build_id=Some(BuildId(01991497-13eb-7e1c-870f-ca0fbb670dad)) session_id=SessionId(01991494-ea88-7b06-8f66-1a30b90e2604) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/test_llm") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991497-2d6f-73b6-9fb9-3c409b3e7bd0`
2025-09-04T11:57:55.953301Z  INFO dora_coordinator: successfully spawned dataflow `01991497-2d6f-73b6-9fb9-3c409b3e7bd0`
2025-09-04T11:58:00.847500Z  INFO dora_coordinator: successfully send stop dataflow `01991497-2d6f-73b6-9fb9-3c409b3e7bd0` to all daemons
2025-09-04T11:58:15.864841Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 01991497-2d6f-73b6-9fb9-3c409b3e7bd0
2025-09-04T11:58:15.864980Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T11:59:07.452682Z  INFO spawn_dataflow{build_id=Some(BuildId(01991497-13eb-7e1c-870f-ca0fbb670dad)) session_id=SessionId(01991494-ea88-7b06-8f66-1a30b90e2604) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/test_llm") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991498-44bb-76e5-8883-329d778c22dd`
2025-09-04T11:59:07.453809Z  INFO dora_coordinator: successfully spawned dataflow `01991498-44bb-76e5-8883-329d778c22dd`
2025-09-04T11:59:32.247819Z  INFO dora_coordinator: successfully send stop dataflow `01991498-44bb-76e5-8883-329d778c22dd` to all daemons
2025-09-04T11:59:36.701328Z  INFO spawn_dataflow{build_id=Some(BuildId(01991497-13eb-7e1c-870f-ca0fbb670dad)) session_id=SessionId(01991494-ea88-7b06-8f66-1a30b90e2604) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/test_llm") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `01991498-b6fc-7108-bcf4-d7bef1859545`
2025-09-04T11:59:36.702447Z  INFO dora_coordinator: successfully spawned dataflow `01991498-b6fc-7108-bcf4-d7bef1859545`
2025-09-04T11:59:47.262142Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 01991498-44bb-76e5-8883-329d778c22dd
2025-09-04T11:59:47.262242Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T11:59:57.336928Z  INFO dora_coordinator: successfully send stop dataflow `01991498-b6fc-7108-bcf4-d7bef1859545` to all daemons
2025-09-04T12:00:12.349280Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 01991498-b6fc-7108-bcf4-d7bef1859545
2025-09-04T12:00:12.349391Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T12:29:07.768110Z  INFO spawn_dataflow{build_id=Some(BuildId(019914b3-8594-74c9-9052-158f07bcd061)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("ops_llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("query")} }, Node { id: NodeId("ops-mem"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("ops_llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019914b3-bd37-7ae5-aa0a-17ab456dc769`
2025-09-04T12:29:07.778294Z  INFO dora_coordinator: successfully spawned dataflow `019914b3-bd37-7ae5-aa0a-17ab456dc769`
2025-09-04T12:29:36.586334Z  INFO dora_coordinator: successfully send stop dataflow `019914b3-bd37-7ae5-aa0a-17ab456dc769` to all daemons
2025-09-04T12:29:51.645917Z  INFO dora_coordinator: removed machine id: 9194d6dc-43b7-4dd7-827c-a098e5fe50cf from dataflow: 019914b3-bd37-7ae5-aa0a-17ab456dc769
2025-09-04T12:29:51.646020Z ERROR dora_coordinator::control: failed to send reply
2025-09-04T12:48:34.772442Z  INFO spawn_dataflow{build_id=Some(BuildId(019914c5-67fe-7b32-8672-c0882908816b)) session_id=SessionId(01990d6c-d027-7d19-89c9-12dfe5716bc2) dataflow=Descriptor { communication: CommunicationConfig { local: Tcp, remote: Tcp }, deploy: None, nodes: [Node { id: NodeId("mock-voice"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("dynamic"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/mock-voice"), send_stdout_as: None, inputs: {DataId("agent_response"): Input { mapping: User(UserInputMapping { source: NodeId("ops-llm-agent"), output: DataId("llm_result") }), queue_size: None }}, outputs: {DataId("data")} }, Node { id: NodeId("ops-scheduler"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("ops-scheduler"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../node-hub/ops-scheduler"), send_stdout_as: None, inputs: {DataId("input_event"): Input { mapping: User(UserInputMapping { source: NodeId("mock-voice"), output: DataId("data") }), queue_size: None }}, outputs: {DataId("query")} }, Node { id: NodeId("ops-mem"), name: None, description: None, env: None, deploy: None, operators: None, custom: None, operator: None, path: Some("ops-mem"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-mem"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-scheduler"), output: DataId("query") }), queue_size: None }}, outputs: {DataId("ops_mem_result")} }, Node { id: NodeId("ops-llm-agent"), name: None, description: None, env: Some({"IS_DATAFLOW_END": Bool(true), "WRITE_LOG": Bool(true)}), deploy: None, operators: None, custom: None, operator: None, path: Some("ops-llm-agent"), git: None, branch: None, tag: None, rev: None, args: None, build: Some("pip install -e ../../agent-hub/ops-llm-agent"), send_stdout_as: None, inputs: {DataId("query"): Input { mapping: User(UserInputMapping { source: NodeId("ops-mem"), output: DataId("ops_mem_result") }), queue_size: None }}, outputs: {DataId("llm_result")} }], debug: Debug { publish_all_messages_to_zenoh: false } } local_working_dir=Some("/home/yang/worksapce/OPS-agent/examples/ops-agent") uv=false}: dora_coordinator::run: successfully triggered dataflow spawn `019914c5-8bd1-71ad-8e09-4c77a13eb11f`
2025-09-04T12:48:34.778909Z  INFO dora_coordinator: successfully spawned dataflow `019914c5-8bd1-71ad-8e09-4c77a13eb11f`
